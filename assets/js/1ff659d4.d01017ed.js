"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5553],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(r),u=o,f=m["".concat(s,".").concat(u)]||m[u]||d[u]||a;return r?n.createElement(f,i(i({ref:t},p),{},{components:r})):n.createElement(f,i({ref:t},p))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},7784:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var n=r(7462),o=(r(7294),r(3905));const a={},i=void 0,l={unversionedId:"Installation",id:"Installation",title:"Installation",description:"This will guide will show you how to install, and begin using TGFramework-ts.",source:"@site/docs/Installation.md",sourceDirName:".",slug:"/Installation",permalink:"/docs/Installation",draft:!1,editUrl:"https://github.com/TrizaCorporation/TGFramework-ts/tree/main/docs/docs/Installation.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/docs/Introduction"}},s={},c=[{value:"Download from NPM",id:"download-from-npm",level:2},{value:"Initializing a Server",id:"initializing-a-server",level:2},{value:"Initializing a Client",id:"initializing-a-client",level:2},{value:"Loading Services/Controllers",id:"loading-servicescontrollers",level:2}],p={toc:c};function m(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This will guide will show you how to install, and begin using TGFramework-ts."),(0,o.kt)("h2",{id:"download-from-npm"},"Download from NPM"),(0,o.kt)("p",null,"To get started using TGFramework-ts, first download the package off of NPM using the following command."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @rbxts/tgframework\n")),(0,o.kt)("h2",{id:"initializing-a-server"},"Initializing a Server"),(0,o.kt)("p",null,"To initialize a Server, simply import the module like so:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import { FrameworkServer } from "@rbxts/tgframework"\n')),(0,o.kt)("p",null,"And then create a new Instance of it like so:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import { FrameworkServer } from "@rbxts/tgframework"\n\nconst TGFramework = new FrameworkServer()\n')),(0,o.kt)("h2",{id:"initializing-a-client"},"Initializing a Client"),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Initializing a Client, works the same as initializing a server, but we included this for examples sake.")),(0,o.kt)("p",null,"To initialize a Client, simply import the module like so:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import { FrameworkClient } from "@rbxts/tgframework"\n')),(0,o.kt)("p",null,"And then create a new Instance of it like so:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import { FrameworkClient } from "@rbxts/tgframework"\n\nconst TGFramework = new FrameworkClient()\n')),(0,o.kt)("h2",{id:"loading-servicescontrollers"},"Loading Services/Controllers"),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"The .AddServices and .AddControllers methods, both have a ",(0,o.kt)("strong",{parentName:"p"},"deep")," option which can be specified with a boolean."),(0,o.kt)("p",{parentName:"admonition"},"Using the ",(0,o.kt)("strong",{parentName:"p"},"deep")," option will load all Descendants which are controllers/services in the specific directory.")),(0,o.kt)("p",null,"To load Services/Controllers, just simply call the .AddServices / .AddControllers Method.",(0,o.kt)("br",null),"\nThis can be done like so:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import { FrameworkServer } from "@rbxts/tgframework"\n\nconst TGFramework = new FrameworkServer()\n\nconst Directory = script.Parent\n\nTGFramework.AddServices(Directory)\n')))}m.isMDXComponent=!0}}]);