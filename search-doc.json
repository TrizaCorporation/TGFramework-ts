[{"title":"Long Blog Post","type":0,"sectionRef":"#","url":"/blog/long-blog-post","content":"This is the summary of a very long blog post, Use a &lt;!-- truncate --&gt; comment to limit blog post size in the list view. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet","keywords":""},{"title":"First Blog Post","type":0,"sectionRef":"#","url":"/blog/first-blog-post","content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet","keywords":""},{"title":"MDX Blog Post","type":0,"sectionRef":"#","url":"/blog/mdx-blog-post","content":"Blog posts support Docusaurus Markdown features, such as MDX. tip Use the power of React to create interactive blog posts. &lt;button onClick={() =&gt; alert('button clicked!')}&gt;Click me!&lt;/button&gt; Click me!","keywords":""},{"title":"Welcome","type":0,"sectionRef":"#","url":"/blog/welcome","content":"Docusaurus blogging features are powered by the blog plugin. Simply add Markdown files (or folders) to the blog directory. Regular blog authors can be added to authors.yml. The blog post date can be extracted from filenames, such as: 2019-05-30-welcome.md2019-05-30-welcome/index.md A blog post folder can be convenient to co-locate blog post images: The blog supports tags as well! And if you don't want a blog: just delete this directory, and use blog: false in your Docusaurus config.","keywords":""},{"title":"@trizacorporation/tgframework","type":0,"sectionRef":"#","url":"/api","content":"@trizacorporation/tgframework Index Classes FrameworkClientFrameworkServer Namespaces Dependencies","keywords":""},{"title":"FrameworkClient","type":0,"sectionRef":"#","url":"/api/class/FrameworkClient","content":"FrameworkClient Index Constructors constructor Properties ControllersMiddlewareOnStartStarted Methods AddControllersStart Constructors constructor new FrameworkClient(): default Returns default Properties Controllers Controllers: Map&lt;string, Controller&gt; optionalMiddleware Middleware?: any OnStart OnStart: BetterSignal Started Started: boolean Methods AddControllers AddControllers(directory: Instance, deep?: boolean): void Parameters directory: Instance optionaldeep: boolean Returns void Start Start(Middleware?: any): any Parameters optionalMiddleware: any Returns any","keywords":""},{"title":"FrameworkServer","type":0,"sectionRef":"#","url":"/api/class/FrameworkServer","content":"FrameworkServer Index Constructors constructor Properties MiddlewareOnStartServicesStarted Methods AddServicesStart Constructors constructor new FrameworkServer(): default Returns default Properties optionalMiddleware Middleware?: any OnStart OnStart: BetterSignal Services Services: Map&lt;string, Service&gt; Started Started: boolean Methods AddServices AddServices(directory: Instance, deep?: boolean): void Parameters directory: Instance optionaldeep: boolean Returns void Start Start(Middleware?: any): any Parameters optionalMiddleware: any Returns any","keywords":""},{"title":"Intro","type":0,"sectionRef":"#","url":"/docs/Intro","content":"Intro","keywords":""},{"title":"Dependencies","type":0,"sectionRef":"#","url":"/api/namespace/Dependencies","content":"Dependencies Index References BetterSignalConnection Enumerations SignalType Classes ControllerService Interfaces ClientServiceMarker Variables BetterSignal Functions CreateNetSignalGetAllControllersGetControllerGetService References BetterSignalConnection Renames and re-exports BetterSignal Enumerations SignalType SignalType: Event Event: Event Function Function: Function Classes Controller Controller: constructor new Controller(controllerData: Controller): Controller Parameters controllerData: Controller Returns Controller optionalMiddleware Middleware?: any Name Name: string optionalTNetClient TNetClient?: any optionalInitialize Initialize(): void Returns void optionalStart Start(): void Returns void Service Service: constructor new Service(serviceData: Service): Service Parameters serviceData: Service Returns Service optionalClient Client?: {} Type declaration [key string | number]: any optionalMiddleware Middleware?: any Name Name: string optionalTNetServer TNetServer?: any optionalInitialize Initialize(): void Returns void optionalStart Start(): void Returns void Interfaces ClientServiceMarker ClientServiceMarker: Variables BetterSignal BetterSignal: any Functions CreateNetSignal CreateNetSignal(signalType: SignalType): any Parameters signalType: SignalType Returns any GetAllControllers GetAllControllers(): Map&lt;string, Controller&gt; Returns all of the currently registered controllers. @deprecated Returns Map&lt;string, Controller&gt; GetController GetController(controllerName: string): any Parameters controllerName: string Returns any GetService GetService(serviceName: string): Service | ClientServiceMarker Returns the requested service, if there is one. Parameters serviceName: string Returns Service | ClientServiceMarker","keywords":""}]